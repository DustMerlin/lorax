# minimal rsyslog configuration file for the installer boot.iso

# provides support for local system logging (e.g. via logger command)
# disables message dropping, we need all of them
# Turn off message reception via local log socket;
# local messages are retrieved through imjournal now.
module(load="imuxsock"
    SysSock.RateLimit.Interval="0"
    SysSock.Use="off")

# provides access to the systemd journal
# Disable rate limiting to the journal, we need all the messages for debugging
module(load="imjournal"
    Ratelimit.Interval="0"
    Ratelimit.Burst="0"
    StateFile="imjournal.state")

module(load="imfile" mode="inotify")
input(type="imfile"
    File="/tmp/X.log"
    Tag="xserver:"
    Facility="local1")

input(type="imfile"
    File="/tmp/anaconda-tb-all.log"
    Tag="anaconda-tb:"
    Facility="local1")

module(load="builtin:omfile"
    Template="RSYSLOG_TraditionalFileFormat"
)


#### GLOBAL DIRECTIVES ####

# Where to place auxiliary files
global(workDirectory="/var/lib/rsyslog")

# Include all config files in /etc/rsyslog.d/
include(file="/etc/rsyslog.d/*.conf")

#### TEMPLATES ####

$template anaconda_tty4, "%syslogseverity-text:::uppercase% %programname%:%msg%\n"
$template anaconda_syslog, "%timestamp:8:$:date-rfc3164%,%timestamp:1:3:date-subseconds% %syslogseverity-text:::uppercase% %programname%:%msg%\n"
$template virtio_ForwardFormat, "<%PRI%>%TIMESTAMP:::date-rfc3339% localhost %syslogtag:1:32%%msg:::sp-if-no-1st-sp%%msg%\n"

#### RULES ####

# log everything except anaconda-specific records from local1 (those are stored
# directly into files via python logging)

# discard messages from dracut regenerating initrd
:programname,isequal,"dracut" stop

*.*;\
authpriv.none;\
local1.none             /tmp/syslog;anaconda_syslog
                        & /dev/tty4;anaconda_tty4


# ### begin forwarding rule ###
# The statement between the begin ... end define a SINGLE forwarding
# rule. They belong together, do NOT split them. If you create multiple
# forwarding rules, duplicate the whole block!
# Remote Logging (we use TCP for reliable delivery)
#
# An on-disk queue is created for this action. If the remote host is
# down, messages are spooled to disk and sent when it is up again.
#$ActionQueueFileName fwdRule1 # unique name prefix for spool files
$ActionQueueMaxDiskSpace 1m     # space limit (use as much as possible)
$ActionQueueSaveOnShutdown off  # do not save messages to disk on shutdown
#$ActionQueueType LinkedList   # run asynchronously
#$ActionResumeRetryCount -1    # infinite retries if host is down
# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional
#*.* @@remote-host:514
# ### end of the forwarding rule ###
